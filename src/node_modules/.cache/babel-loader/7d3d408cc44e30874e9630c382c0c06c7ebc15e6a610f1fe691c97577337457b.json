{"ast":null,"code":"import React,{useState}from'react';import{useDispatch,useSelector}from'react-redux';import{Box,TextField,IconButton,Paper,InputAdornment,CircularProgress,Select,MenuItem,FormControl,InputLabel}from'@mui/material';import SendIcon from'@mui/icons-material/Send';import MicIcon from'@mui/icons-material/Mic';import{addMessage,setTyping}from'../../store/slices/chatSlice';import{sendMessage}from'../../services/websocketService';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ChatInput=()=>{const dispatch=useDispatch();const[inputValue,setInputValue]=useState('');const[modelType,setModelType]=useState('default');const[isRecording,setIsRecording]=useState(false);const isTyping=useSelector(state=>state.chat.isTyping);const activeComponentId=useSelector(state=>state.components.activeComponentId);const websocketStatus=useSelector(state=>state.websocket.status);const components=useSelector(state=>state.components.list);// Find active component\nconst activeComponent=activeComponentId?components.find(c=>c.id===activeComponentId):null;const handleSendMessage=()=>{if(!inputValue.trim())return;// Create message object\nconst message={id:Date.now().toString(),content:inputValue,timestamp:new Date().toISOString(),sender:'user',componentId:activeComponentId||null,metadata:{modelType}};// Add to local state\ndispatch(addMessage(message));// Send via websocket\nif(websocketStatus==='connected'){sendMessage(message);// Set AI as typing\ndispatch(setTyping(true));}// Clear input\nsetInputValue('');};const handleInputChange=e=>{setInputValue(e.target.value);};const handleKeyDown=e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();handleSendMessage();}};const handleModelChange=e=>{setModelType(e.target.value);};const toggleRecording=()=>{// This would be implemented with a proper speech recognition API\nsetIsRecording(!isRecording);};return/*#__PURE__*/_jsx(Paper,{elevation:3,sx:{p:2,borderRadius:2},children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:2},children:[/*#__PURE__*/_jsxs(FormControl,{variant:\"outlined\",size:\"small\",sx:{minWidth:120},children:[/*#__PURE__*/_jsx(InputLabel,{id:\"model-select-label\",children:\"Model\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"model-select-label\",id:\"model-select\",value:modelType,onChange:handleModelChange,label:\"Model\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"default\",children:\"Default\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"claude-3-opus\",children:\"Claude 3 Opus\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"claude-3-sonnet\",children:\"Claude 3 Sonnet\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"claude-3-haiku\",children:\"Claude 3 Haiku\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"local-llama\",children:\"Local Llama\"})]})]}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,variant:\"outlined\",placeholder:`Message ${activeComponent?activeComponent.name:'Tekton'}...`,value:inputValue,onChange:handleInputChange,onKeyDown:handleKeyDown,disabled:isTyping||websocketStatus!=='connected',multiline:true,maxRows:4,size:\"small\",InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:isTyping?/*#__PURE__*/_jsx(CircularProgress,{size:24}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(IconButton,{color:\"primary\",onClick:toggleRecording,disabled:websocketStatus!=='connected',sx:{color:isRecording?'error.main':'inherit'},children:/*#__PURE__*/_jsx(MicIcon,{})}),/*#__PURE__*/_jsx(IconButton,{color:\"primary\",onClick:handleSendMessage,disabled:!inputValue.trim()||websocketStatus!=='connected',children:/*#__PURE__*/_jsx(SendIcon,{})})]})})},sx:{'& .MuiOutlinedInput-root':{borderRadius:2}}})]})});};export default ChatInput;","map":{"version":3,"names":["React","useState","useDispatch","useSelector","Box","TextField","IconButton","Paper","InputAdornment","CircularProgress","Select","MenuItem","FormControl","InputLabel","SendIcon","MicIcon","addMessage","setTyping","sendMessage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ChatInput","dispatch","inputValue","setInputValue","modelType","setModelType","isRecording","setIsRecording","isTyping","state","chat","activeComponentId","components","websocketStatus","websocket","status","list","activeComponent","find","c","id","handleSendMessage","trim","message","Date","now","toString","content","timestamp","toISOString","sender","componentId","metadata","handleInputChange","e","target","value","handleKeyDown","key","shiftKey","preventDefault","handleModelChange","toggleRecording","elevation","sx","p","borderRadius","children","display","alignItems","gap","variant","size","minWidth","labelId","onChange","label","fullWidth","placeholder","name","onKeyDown","disabled","multiline","maxRows","InputProps","endAdornment","position","color","onClick"],"sources":["/Users/cskoons/projects/github/Tekton/Hephaestus/src/src/components/chat/ChatInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Box,\n  TextField,\n  IconButton,\n  Paper,\n  InputAdornment,\n  CircularProgress,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n} from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport MicIcon from '@mui/icons-material/Mic';\n\nimport { addMessage, setTyping } from '../../store/slices/chatSlice';\nimport { sendMessage } from '../../services/websocketService';\n\nconst ChatInput = () => {\n  const dispatch = useDispatch();\n  const [inputValue, setInputValue] = useState('');\n  const [modelType, setModelType] = useState('default');\n  const [isRecording, setIsRecording] = useState(false);\n  \n  const isTyping = useSelector((state) => state.chat.isTyping);\n  const activeComponentId = useSelector((state) => state.components.activeComponentId);\n  const websocketStatus = useSelector((state) => state.websocket.status);\n  const components = useSelector((state) => state.components.list);\n  \n  // Find active component\n  const activeComponent = activeComponentId \n    ? components.find(c => c.id === activeComponentId) \n    : null;\n  \n  const handleSendMessage = () => {\n    if (!inputValue.trim()) return;\n    \n    // Create message object\n    const message = {\n      id: Date.now().toString(),\n      content: inputValue,\n      timestamp: new Date().toISOString(),\n      sender: 'user',\n      componentId: activeComponentId || null,\n      metadata: {\n        modelType,\n      },\n    };\n    \n    // Add to local state\n    dispatch(addMessage(message));\n    \n    // Send via websocket\n    if (websocketStatus === 'connected') {\n      sendMessage(message);\n      \n      // Set AI as typing\n      dispatch(setTyping(true));\n    }\n    \n    // Clear input\n    setInputValue('');\n  };\n  \n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n  \n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  \n  const handleModelChange = (e) => {\n    setModelType(e.target.value);\n  };\n  \n  const toggleRecording = () => {\n    // This would be implemented with a proper speech recognition API\n    setIsRecording(!isRecording);\n  };\n\n  return (\n    <Paper\n      elevation={3}\n      sx={{\n        p: 2,\n        borderRadius: 2,\n      }}\n    >\n      <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n        {/* Optional model selection */}\n        <FormControl variant=\"outlined\" size=\"small\" sx={{ minWidth: 120 }}>\n          <InputLabel id=\"model-select-label\">Model</InputLabel>\n          <Select\n            labelId=\"model-select-label\"\n            id=\"model-select\"\n            value={modelType}\n            onChange={handleModelChange}\n            label=\"Model\"\n          >\n            <MenuItem value=\"default\">Default</MenuItem>\n            <MenuItem value=\"claude-3-opus\">Claude 3 Opus</MenuItem>\n            <MenuItem value=\"claude-3-sonnet\">Claude 3 Sonnet</MenuItem>\n            <MenuItem value=\"claude-3-haiku\">Claude 3 Haiku</MenuItem>\n            <MenuItem value=\"local-llama\">Local Llama</MenuItem>\n          </Select>\n        </FormControl>\n        \n        {/* Main input field */}\n        <TextField\n          fullWidth\n          variant=\"outlined\"\n          placeholder={`Message ${activeComponent ? activeComponent.name : 'Tekton'}...`}\n          value={inputValue}\n          onChange={handleInputChange}\n          onKeyDown={handleKeyDown}\n          disabled={isTyping || websocketStatus !== 'connected'}\n          multiline\n          maxRows={4}\n          size=\"small\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                {isTyping ? (\n                  <CircularProgress size={24} />\n                ) : (\n                  <>\n                    <IconButton\n                      color=\"primary\"\n                      onClick={toggleRecording}\n                      disabled={websocketStatus !== 'connected'}\n                      sx={{ color: isRecording ? 'error.main' : 'inherit' }}\n                    >\n                      <MicIcon />\n                    </IconButton>\n                    <IconButton\n                      color=\"primary\"\n                      onClick={handleSendMessage}\n                      disabled={!inputValue.trim() || websocketStatus !== 'connected'}\n                    >\n                      <SendIcon />\n                    </IconButton>\n                  </>\n                )}\n              </InputAdornment>\n            ),\n          }}\n          sx={{\n            '& .MuiOutlinedInput-root': {\n              borderRadius: 2,\n            },\n          }}\n        />\n      </Box>\n    </Paper>\n  );\n};\n\nexport default ChatInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}