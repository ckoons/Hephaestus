{"ast":null,"code":"import React from'react';import{useSelector}from'react-redux';import{Chip,Tooltip,Badge}from'@mui/material';import CheckCircleIcon from'@mui/icons-material/CheckCircle';import ErrorIcon from'@mui/icons-material/Error';import SyncIcon from'@mui/icons-material/Sync';import{jsx as _jsx}from\"react/jsx-runtime\";const ConnectionStatus=()=>{const websocketStatus=useSelector(state=>state.websocket.status);const components=useSelector(state=>state.components.list);// Count active components\nconst activeComponentCount=components.filter(c=>c.status==='READY'||c.status==='RUNNING').length;// Count total components\nconst totalComponentCount=components.length;// Get status data based on connection state\nconst getStatusData=()=>{switch(websocketStatus){case'connected':return{label:'Connected',color:'success',icon:/*#__PURE__*/_jsx(CheckCircleIcon,{}),tooltip:`Connected to server with ${activeComponentCount}/${totalComponentCount} components active`};case'connecting':return{label:'Connecting',color:'warning',icon:/*#__PURE__*/_jsx(SyncIcon,{className:\"rotating-icon\"}),tooltip:'Connecting to server...'};case'disconnected':return{label:'Disconnected',color:'error',icon:/*#__PURE__*/_jsx(ErrorIcon,{}),tooltip:'Disconnected from server'};default:return{label:'Unknown',color:'default',icon:/*#__PURE__*/_jsx(ErrorIcon,{}),tooltip:'Connection status unknown'};}};const statusData=getStatusData();return/*#__PURE__*/_jsx(Tooltip,{title:statusData.tooltip,children:/*#__PURE__*/_jsx(Badge,{badgeContent:activeComponentCount,color:\"primary\",sx:{'& .MuiBadge-badge':{right:-3,top:3}},children:/*#__PURE__*/_jsx(Chip,{icon:statusData.icon,label:statusData.label,color:statusData.color,size:\"small\",sx:{'.rotating-icon':{animation:'spin 2s linear infinite','@keyframes spin':{'0%':{transform:'rotate(0deg)'},'100%':{transform:'rotate(360deg)'}}}}})})});};export default ConnectionStatus;","map":{"version":3,"names":["React","useSelector","Chip","Tooltip","Badge","CheckCircleIcon","ErrorIcon","SyncIcon","jsx","_jsx","ConnectionStatus","websocketStatus","state","websocket","status","components","list","activeComponentCount","filter","c","length","totalComponentCount","getStatusData","label","color","icon","tooltip","className","statusData","title","children","badgeContent","sx","right","top","size","animation","transform"],"sources":["/Users/cskoons/projects/github/Tekton/Hephaestus/src/src/components/common/ConnectionStatus.js"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  Chip,\n  Tooltip,\n  Badge,\n} from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport SyncIcon from '@mui/icons-material/Sync';\n\nconst ConnectionStatus = () => {\n  const websocketStatus = useSelector(state => state.websocket.status);\n  const components = useSelector(state => state.components.list);\n  \n  // Count active components\n  const activeComponentCount = components.filter(\n    c => c.status === 'READY' || c.status === 'RUNNING'\n  ).length;\n  \n  // Count total components\n  const totalComponentCount = components.length;\n  \n  // Get status data based on connection state\n  const getStatusData = () => {\n    switch (websocketStatus) {\n      case 'connected':\n        return {\n          label: 'Connected',\n          color: 'success',\n          icon: <CheckCircleIcon />,\n          tooltip: `Connected to server with ${activeComponentCount}/${totalComponentCount} components active`,\n        };\n      case 'connecting':\n        return {\n          label: 'Connecting',\n          color: 'warning',\n          icon: <SyncIcon className=\"rotating-icon\" />,\n          tooltip: 'Connecting to server...',\n        };\n      case 'disconnected':\n        return {\n          label: 'Disconnected',\n          color: 'error',\n          icon: <ErrorIcon />,\n          tooltip: 'Disconnected from server',\n        };\n      default:\n        return {\n          label: 'Unknown',\n          color: 'default',\n          icon: <ErrorIcon />,\n          tooltip: 'Connection status unknown',\n        };\n    }\n  };\n  \n  const statusData = getStatusData();\n  \n  return (\n    <Tooltip title={statusData.tooltip}>\n      <Badge \n        badgeContent={activeComponentCount} \n        color=\"primary\"\n        sx={{ \n          '& .MuiBadge-badge': {\n            right: -3,\n            top: 3,\n          } \n        }}\n      >\n        <Chip\n          icon={statusData.icon}\n          label={statusData.label}\n          color={statusData.color}\n          size=\"small\"\n          sx={{\n            '.rotating-icon': {\n              animation: 'spin 2s linear infinite',\n              '@keyframes spin': {\n                '0%': {\n                  transform: 'rotate(0deg)',\n                },\n                '100%': {\n                  transform: 'rotate(360deg)',\n                },\n              },\n            },\n          }}\n        />\n      </Badge>\n    </Tooltip>\n  );\n};\n\nexport default ConnectionStatus;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,aAAa,CACzC,OACEC,IAAI,CACJC,OAAO,CACPC,KAAK,KACA,eAAe,CACtB,MAAO,CAAAC,eAAe,KAAM,iCAAiC,CAC7D,MAAO,CAAAC,SAAS,KAAM,2BAA2B,CACjD,MAAO,CAAAC,QAAQ,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEhD,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAAAC,eAAe,CAAGV,WAAW,CAACW,KAAK,EAAIA,KAAK,CAACC,SAAS,CAACC,MAAM,CAAC,CACpE,KAAM,CAAAC,UAAU,CAAGd,WAAW,CAACW,KAAK,EAAIA,KAAK,CAACG,UAAU,CAACC,IAAI,CAAC,CAE9D;AACA,KAAM,CAAAC,oBAAoB,CAAGF,UAAU,CAACG,MAAM,CAC5CC,CAAC,EAAIA,CAAC,CAACL,MAAM,GAAK,OAAO,EAAIK,CAAC,CAACL,MAAM,GAAK,SAC5C,CAAC,CAACM,MAAM,CAER;AACA,KAAM,CAAAC,mBAAmB,CAAGN,UAAU,CAACK,MAAM,CAE7C;AACA,KAAM,CAAAE,aAAa,CAAGA,CAAA,GAAM,CAC1B,OAAQX,eAAe,EACrB,IAAK,WAAW,CACd,MAAO,CACLY,KAAK,CAAE,WAAW,CAClBC,KAAK,CAAE,SAAS,CAChBC,IAAI,cAAEhB,IAAA,CAACJ,eAAe,GAAE,CAAC,CACzBqB,OAAO,CAAE,4BAA4BT,oBAAoB,IAAII,mBAAmB,oBAClF,CAAC,CACH,IAAK,YAAY,CACf,MAAO,CACLE,KAAK,CAAE,YAAY,CACnBC,KAAK,CAAE,SAAS,CAChBC,IAAI,cAAEhB,IAAA,CAACF,QAAQ,EAACoB,SAAS,CAAC,eAAe,CAAE,CAAC,CAC5CD,OAAO,CAAE,yBACX,CAAC,CACH,IAAK,cAAc,CACjB,MAAO,CACLH,KAAK,CAAE,cAAc,CACrBC,KAAK,CAAE,OAAO,CACdC,IAAI,cAAEhB,IAAA,CAACH,SAAS,GAAE,CAAC,CACnBoB,OAAO,CAAE,0BACX,CAAC,CACH,QACE,MAAO,CACLH,KAAK,CAAE,SAAS,CAChBC,KAAK,CAAE,SAAS,CAChBC,IAAI,cAAEhB,IAAA,CAACH,SAAS,GAAE,CAAC,CACnBoB,OAAO,CAAE,2BACX,CAAC,CACL,CACF,CAAC,CAED,KAAM,CAAAE,UAAU,CAAGN,aAAa,CAAC,CAAC,CAElC,mBACEb,IAAA,CAACN,OAAO,EAAC0B,KAAK,CAAED,UAAU,CAACF,OAAQ,CAAAI,QAAA,cACjCrB,IAAA,CAACL,KAAK,EACJ2B,YAAY,CAAEd,oBAAqB,CACnCO,KAAK,CAAC,SAAS,CACfQ,EAAE,CAAE,CACF,mBAAmB,CAAE,CACnBC,KAAK,CAAE,CAAC,CAAC,CACTC,GAAG,CAAE,CACP,CACF,CAAE,CAAAJ,QAAA,cAEFrB,IAAA,CAACP,IAAI,EACHuB,IAAI,CAAEG,UAAU,CAACH,IAAK,CACtBF,KAAK,CAAEK,UAAU,CAACL,KAAM,CACxBC,KAAK,CAAEI,UAAU,CAACJ,KAAM,CACxBW,IAAI,CAAC,OAAO,CACZH,EAAE,CAAE,CACF,gBAAgB,CAAE,CAChBI,SAAS,CAAE,yBAAyB,CACpC,iBAAiB,CAAE,CACjB,IAAI,CAAE,CACJC,SAAS,CAAE,cACb,CAAC,CACD,MAAM,CAAE,CACNA,SAAS,CAAE,gBACb,CACF,CACF,CACF,CAAE,CACH,CAAC,CACG,CAAC,CACD,CAAC,CAEd,CAAC,CAED,cAAe,CAAA3B,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}