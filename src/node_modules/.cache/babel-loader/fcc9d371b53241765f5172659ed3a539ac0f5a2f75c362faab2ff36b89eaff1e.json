{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  list: [],\n  activeComponentId: null,\n  status: 'idle',\n  // 'idle' | 'loading' | 'succeeded' | 'failed'\n  error: null\n};\nconst componentsSlice = createSlice({\n  name: 'components',\n  initialState,\n  reducers: {\n    setComponents: (state, action) => {\n      state.list = action.payload;\n      state.status = 'succeeded';\n    },\n    setActiveComponent: (state, action) => {\n      state.activeComponentId = action.payload;\n    },\n    updateComponentStatus: (state, action) => {\n      const {\n        componentId,\n        status\n      } = action.payload;\n      const component = state.list.find(c => c.id === componentId);\n      if (component) {\n        component.status = status;\n      }\n    },\n    setComponentsLoading: state => {\n      state.status = 'loading';\n    },\n    setComponentsError: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  setComponents,\n  setActiveComponent,\n  updateComponentStatus,\n  setComponentsLoading,\n  setComponentsError\n} = componentsSlice.actions;\nexport default componentsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","list","activeComponentId","status","error","componentsSlice","name","reducers","setComponents","state","action","payload","setActiveComponent","updateComponentStatus","componentId","component","find","c","id","setComponentsLoading","setComponentsError","actions","reducer"],"sources":["/Users/cskoons/projects/github/Tekton/Hephaestus/src/store/slices/componentsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  list: [],\n  activeComponentId: null,\n  status: 'idle', // 'idle' | 'loading' | 'succeeded' | 'failed'\n  error: null,\n};\n\nconst componentsSlice = createSlice({\n  name: 'components',\n  initialState,\n  reducers: {\n    setComponents: (state, action) => {\n      state.list = action.payload;\n      state.status = 'succeeded';\n    },\n    setActiveComponent: (state, action) => {\n      state.activeComponentId = action.payload;\n    },\n    updateComponentStatus: (state, action) => {\n      const { componentId, status } = action.payload;\n      const component = state.list.find(c => c.id === componentId);\n      if (component) {\n        component.status = status;\n      }\n    },\n    setComponentsLoading: (state) => {\n      state.status = 'loading';\n    },\n    setComponentsError: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  setComponents,\n  setActiveComponent,\n  updateComponentStatus,\n  setComponentsLoading,\n  setComponentsError,\n} = componentsSlice.actions;\n\nexport default componentsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,EAAE;EACRC,iBAAiB,EAAE,IAAI;EACvBC,MAAM,EAAE,MAAM;EAAE;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,eAAe,GAAGN,WAAW,CAAC;EAClCO,IAAI,EAAE,YAAY;EAClBN,YAAY;EACZO,QAAQ,EAAE;IACRC,aAAa,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACR,IAAI,GAAGS,MAAM,CAACC,OAAO;MAC3BF,KAAK,CAACN,MAAM,GAAG,WAAW;IAC5B,CAAC;IACDS,kBAAkB,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MACrCD,KAAK,CAACP,iBAAiB,GAAGQ,MAAM,CAACC,OAAO;IAC1C,CAAC;IACDE,qBAAqB,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACxC,MAAM;QAAEI,WAAW;QAAEX;MAAO,CAAC,GAAGO,MAAM,CAACC,OAAO;MAC9C,MAAMI,SAAS,GAAGN,KAAK,CAACR,IAAI,CAACe,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,WAAW,CAAC;MAC5D,IAAIC,SAAS,EAAE;QACbA,SAAS,CAACZ,MAAM,GAAGA,MAAM;MAC3B;IACF,CAAC;IACDgB,oBAAoB,EAAGV,KAAK,IAAK;MAC/BA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC1B,CAAC;IACDiB,kBAAkB,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MACrCD,KAAK,CAACN,MAAM,GAAG,QAAQ;MACvBM,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXH,aAAa;EACbI,kBAAkB;EAClBC,qBAAqB;EACrBM,oBAAoB;EACpBC;AACF,CAAC,GAAGf,eAAe,CAACgB,OAAO;AAE3B,eAAehB,eAAe,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}