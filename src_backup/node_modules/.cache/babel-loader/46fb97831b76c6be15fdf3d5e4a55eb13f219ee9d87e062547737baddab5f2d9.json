{"ast":null,"code":"import{io}from'socket.io-client';import store from'../store';import{setStatus,setSocket,setError}from'../store/slices/websocketSlice';import{addMessage}from'../store/slices/chatSlice';import{updateComponentStatus}from'../store/slices/componentsSlice';let socket=null;export const connectWebSocket=()=>{const{dispatch}=store;// If already connected, return the socket\nif(socket){return socket;}// Update connection status\ndispatch(setStatus('connecting'));// Connect to WebSocket server\nsocket=io({path:'/ws',reconnectionAttempts:5,reconnectionDelay:1000,reconnectionDelayMax:5000});// Save socket in store\ndispatch(setSocket(socket));// Handle connection events\nsocket.on('connect',()=>{dispatch(setStatus('connected'));});socket.on('disconnect',()=>{dispatch(setStatus('disconnected'));});socket.on('connect_error',error=>{dispatch(setError(error.message));dispatch(setStatus('disconnected'));});// Handle server messages\nsocket.on('component_update',data=>{dispatch(updateComponentStatus({componentId:data.id,status:data.status}));});socket.on('message',data=>{dispatch(addMessage(data));});return socket;};export const disconnectWebSocket=()=>{if(socket){socket.disconnect();socket=null;store.dispatch(setStatus('disconnected'));store.dispatch(setSocket(null));}};export const sendMessage=message=>{if(socket&&socket.connected){socket.emit('send_message',message);return true;}return false;};export const sendCommand=(componentId,command,data)=>{if(socket&&socket.connected){const requestId=Date.now().toString();socket.emit('send_command',{type:'send_command',component_id:componentId,command,data,request_id:requestId});return requestId;}return null;};export const checkDeadlocks=()=>{if(socket&&socket.connected){const requestId=Date.now().toString();socket.emit('check_deadlocks',{type:'check_deadlocks',request_id:requestId});return requestId;}return null;};export default{connectWebSocket,disconnectWebSocket,sendMessage,sendCommand,checkDeadlocks};","map":{"version":3,"names":["io","store","setStatus","setSocket","setError","addMessage","updateComponentStatus","socket","connectWebSocket","dispatch","path","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","on","error","message","data","componentId","id","status","disconnectWebSocket","disconnect","sendMessage","connected","emit","sendCommand","command","requestId","Date","now","toString","type","component_id","request_id","checkDeadlocks"],"sources":["/Users/cskoons/projects/github/Tekton/Hephaestus/src/src/services/websocketService.js"],"sourcesContent":["import { io } from 'socket.io-client';\nimport store from '../store';\nimport { setStatus, setSocket, setError } from '../store/slices/websocketSlice';\nimport { addMessage } from '../store/slices/chatSlice';\nimport { updateComponentStatus } from '../store/slices/componentsSlice';\n\nlet socket = null;\n\nexport const connectWebSocket = () => {\n  const { dispatch } = store;\n\n  // If already connected, return the socket\n  if (socket) {\n    return socket;\n  }\n\n  // Update connection status\n  dispatch(setStatus('connecting'));\n\n  // Connect to WebSocket server\n  socket = io({\n    path: '/ws',\n    reconnectionAttempts: 5,\n    reconnectionDelay: 1000,\n    reconnectionDelayMax: 5000,\n  });\n\n  // Save socket in store\n  dispatch(setSocket(socket));\n\n  // Handle connection events\n  socket.on('connect', () => {\n    dispatch(setStatus('connected'));\n  });\n\n  socket.on('disconnect', () => {\n    dispatch(setStatus('disconnected'));\n  });\n\n  socket.on('connect_error', (error) => {\n    dispatch(setError(error.message));\n    dispatch(setStatus('disconnected'));\n  });\n\n  // Handle server messages\n  socket.on('component_update', (data) => {\n    dispatch(updateComponentStatus({\n      componentId: data.id,\n      status: data.status\n    }));\n  });\n\n  socket.on('message', (data) => {\n    dispatch(addMessage(data));\n  });\n\n  return socket;\n};\n\nexport const disconnectWebSocket = () => {\n  if (socket) {\n    socket.disconnect();\n    socket = null;\n    store.dispatch(setStatus('disconnected'));\n    store.dispatch(setSocket(null));\n  }\n};\n\nexport const sendMessage = (message) => {\n  if (socket && socket.connected) {\n    socket.emit('send_message', message);\n    return true;\n  }\n  return false;\n};\n\nexport const sendCommand = (componentId, command, data) => {\n  if (socket && socket.connected) {\n    const requestId = Date.now().toString();\n    socket.emit('send_command', {\n      type: 'send_command',\n      component_id: componentId,\n      command,\n      data,\n      request_id: requestId,\n    });\n    return requestId;\n  }\n  return null;\n};\n\nexport const checkDeadlocks = () => {\n  if (socket && socket.connected) {\n    const requestId = Date.now().toString();\n    socket.emit('check_deadlocks', {\n      type: 'check_deadlocks',\n      request_id: requestId,\n    });\n    return requestId;\n  }\n  return null;\n};\n\nexport default {\n  connectWebSocket,\n  disconnectWebSocket,\n  sendMessage,\n  sendCommand,\n  checkDeadlocks,\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}