{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';const initialState={theme:'dark',fontSize:'medium',notifications:true,autoConnect:true,developerMode:false,showGreekNames:true// TEKTON_SHOW_GREEK_NAMES default is true\n};const settingsSlice=createSlice({name:'settings',initialState,reducers:{setTheme:(state,action)=>{state.theme=action.payload;},setFontSize:(state,action)=>{state.fontSize=action.payload;},setNotifications:(state,action)=>{state.notifications=action.payload;},setAutoConnect:(state,action)=>{state.autoConnect=action.payload;},setDeveloperMode:(state,action)=>{state.developerMode=action.payload;},setShowGreekNames:(state,action)=>{state.showGreekNames=action.payload;},resetSettings:state=>{return initialState;}}});export const{setTheme,setFontSize,setNotifications,setAutoConnect,setDeveloperMode,setShowGreekNames,resetSettings}=settingsSlice.actions;export default settingsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","theme","fontSize","notifications","autoConnect","developerMode","showGreekNames","settingsSlice","name","reducers","setTheme","state","action","payload","setFontSize","setNotifications","setAutoConnect","setDeveloperMode","setShowGreekNames","resetSettings","actions","reducer"],"sources":["/Users/cskoons/projects/github/Tekton/Hephaestus/src/src/store/slices/settingsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  theme: 'dark',\n  fontSize: 'medium',\n  notifications: true,\n  autoConnect: true,\n  developerMode: false,\n  showGreekNames: true, // TEKTON_SHOW_GREEK_NAMES default is true\n};\n\nconst settingsSlice = createSlice({\n  name: 'settings',\n  initialState,\n  reducers: {\n    setTheme: (state, action) => {\n      state.theme = action.payload;\n    },\n    setFontSize: (state, action) => {\n      state.fontSize = action.payload;\n    },\n    setNotifications: (state, action) => {\n      state.notifications = action.payload;\n    },\n    setAutoConnect: (state, action) => {\n      state.autoConnect = action.payload;\n    },\n    setDeveloperMode: (state, action) => {\n      state.developerMode = action.payload;\n    },\n    setShowGreekNames: (state, action) => {\n      state.showGreekNames = action.payload;\n    },\n    resetSettings: (state) => {\n      return initialState;\n    },\n  },\n});\n\nexport const {\n  setTheme,\n  setFontSize,\n  setNotifications,\n  setAutoConnect,\n  setDeveloperMode,\n  setShowGreekNames,\n  resetSettings,\n} = settingsSlice.actions;\n\nexport default settingsSlice.reducer;"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,KAAM,CAAAC,YAAY,CAAG,CACnBC,KAAK,CAAE,MAAM,CACbC,QAAQ,CAAE,QAAQ,CAClBC,aAAa,CAAE,IAAI,CACnBC,WAAW,CAAE,IAAI,CACjBC,aAAa,CAAE,KAAK,CACpBC,cAAc,CAAE,IAAM;AACxB,CAAC,CAED,KAAM,CAAAC,aAAa,CAAGR,WAAW,CAAC,CAChCS,IAAI,CAAE,UAAU,CAChBR,YAAY,CACZS,QAAQ,CAAE,CACRC,QAAQ,CAAEA,CAACC,KAAK,CAAEC,MAAM,GAAK,CAC3BD,KAAK,CAACV,KAAK,CAAGW,MAAM,CAACC,OAAO,CAC9B,CAAC,CACDC,WAAW,CAAEA,CAACH,KAAK,CAAEC,MAAM,GAAK,CAC9BD,KAAK,CAACT,QAAQ,CAAGU,MAAM,CAACC,OAAO,CACjC,CAAC,CACDE,gBAAgB,CAAEA,CAACJ,KAAK,CAAEC,MAAM,GAAK,CACnCD,KAAK,CAACR,aAAa,CAAGS,MAAM,CAACC,OAAO,CACtC,CAAC,CACDG,cAAc,CAAEA,CAACL,KAAK,CAAEC,MAAM,GAAK,CACjCD,KAAK,CAACP,WAAW,CAAGQ,MAAM,CAACC,OAAO,CACpC,CAAC,CACDI,gBAAgB,CAAEA,CAACN,KAAK,CAAEC,MAAM,GAAK,CACnCD,KAAK,CAACN,aAAa,CAAGO,MAAM,CAACC,OAAO,CACtC,CAAC,CACDK,iBAAiB,CAAEA,CAACP,KAAK,CAAEC,MAAM,GAAK,CACpCD,KAAK,CAACL,cAAc,CAAGM,MAAM,CAACC,OAAO,CACvC,CAAC,CACDM,aAAa,CAAGR,KAAK,EAAK,CACxB,MAAO,CAAAX,YAAY,CACrB,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CACXU,QAAQ,CACRI,WAAW,CACXC,gBAAgB,CAChBC,cAAc,CACdC,gBAAgB,CAChBC,iBAAiB,CACjBC,aACF,CAAC,CAAGZ,aAAa,CAACa,OAAO,CAEzB,cAAe,CAAAb,aAAa,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}