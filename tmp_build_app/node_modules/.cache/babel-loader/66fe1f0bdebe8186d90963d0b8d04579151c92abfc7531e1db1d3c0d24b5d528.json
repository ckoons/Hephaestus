{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{useSelector}from'react-redux';import{Box,Typography,CircularProgress,Divider,Paper}from'@mui/material';import ChatMessage from'./ChatMessage';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatWindow=_ref=>{let{componentId}=_ref;const messagesEndRef=useRef(null);const messages=useSelector(state=>state.chat.messages);const isTyping=useSelector(state=>state.chat.isTyping);// Filter messages for the current component if componentId is provided\nconst filteredMessages=componentId?messages.filter(msg=>msg.componentId===componentId||msg.componentId===null):messages;// Scroll to bottom when messages change\nuseEffect(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});},[filteredMessages,isTyping]);return/*#__PURE__*/_jsx(Paper,{elevation:0,sx:{display:'flex',flexDirection:'column',height:'100%',overflow:'hidden',bgcolor:'background.default',border:'1px solid',borderColor:'divider',borderRadius:2},children:/*#__PURE__*/_jsxs(Box,{sx:{flexGrow:1,overflow:'auto',p:2,display:'flex',flexDirection:'column'},children:[filteredMessages.length===0?/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',height:'100%',opacity:0.7},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"text.secondary\",align:\"center\",children:\"No messages yet\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",align:\"center\",children:\"Start a conversation by typing in the box below\"})]}):filteredMessages.map(message=>/*#__PURE__*/_jsx(ChatMessage,{message:message},message.id)),isTyping&&/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',p:2,mb:1},children:[/*#__PURE__*/_jsx(CircularProgress,{size:16,sx:{mr:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Tekton is thinking...\"})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]})});};export default ChatWindow;","map":{"version":3,"names":["React","useEffect","useRef","useSelector","Box","Typography","CircularProgress","Divider","Paper","ChatMessage","jsx","_jsx","jsxs","_jsxs","ChatWindow","_ref","componentId","messagesEndRef","messages","state","chat","isTyping","filteredMessages","filter","msg","_messagesEndRef$curre","current","scrollIntoView","behavior","elevation","sx","display","flexDirection","height","overflow","bgcolor","border","borderColor","borderRadius","children","flexGrow","p","length","alignItems","justifyContent","opacity","variant","color","align","map","message","id","mb","size","mr","ref"],"sources":["/Users/cskoons/projects/github/Tekton/Hephaestus/src/src/components/chat/ChatWindow.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  Box,\n  Typography,\n  CircularProgress,\n  Divider,\n  Paper,\n} from '@mui/material';\n\nimport ChatMessage from './ChatMessage';\n\nconst ChatWindow = ({ componentId }) => {\n  const messagesEndRef = useRef(null);\n  const messages = useSelector(state => state.chat.messages);\n  const isTyping = useSelector(state => state.chat.isTyping);\n  \n  // Filter messages for the current component if componentId is provided\n  const filteredMessages = componentId \n    ? messages.filter(msg => msg.componentId === componentId || msg.componentId === null)\n    : messages;\n  \n  // Scroll to bottom when messages change\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [filteredMessages, isTyping]);\n  \n  return (\n    <Paper\n      elevation={0}\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        overflow: 'hidden',\n        bgcolor: 'background.default',\n        border: '1px solid',\n        borderColor: 'divider',\n        borderRadius: 2,\n      }}\n    >\n      {/* Chat messages */}\n      <Box sx={{ \n        flexGrow: 1, \n        overflow: 'auto', \n        p: 2,\n        display: 'flex',\n        flexDirection: 'column',\n      }}>\n        {filteredMessages.length === 0 ? (\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              justifyContent: 'center',\n              height: '100%',\n              opacity: 0.7,\n            }}\n          >\n            <Typography variant=\"h6\" color=\"text.secondary\" align=\"center\">\n              No messages yet\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n              Start a conversation by typing in the box below\n            </Typography>\n          </Box>\n        ) : (\n          filteredMessages.map((message) => (\n            <ChatMessage key={message.id} message={message} />\n          ))\n        )}\n        \n        {/* AI typing indicator */}\n        {isTyping && (\n          <Box\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              p: 2,\n              mb: 1,\n            }}\n          >\n            <CircularProgress size={16} sx={{ mr: 1 }} />\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Tekton is thinking...\n            </Typography>\n          </Box>\n        )}\n        \n        {/* Empty div for scrolling to bottom */}\n        <div ref={messagesEndRef} />\n      </Box>\n    </Paper>\n  );\n};\n\nexport default ChatWindow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}