{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';const initialState={list:[],activeComponentId:null,status:'idle',// 'idle' | 'loading' | 'succeeded' | 'failed'\nerror:null};const componentsSlice=createSlice({name:'components',initialState,reducers:{setComponents:(state,action)=>{state.list=action.payload;state.status='succeeded';},setActiveComponent:(state,action)=>{state.activeComponentId=action.payload;},updateComponentStatus:(state,action)=>{const{componentId,status}=action.payload;const component=state.list.find(c=>c.id===componentId);if(component){component.status=status;}},setComponentsLoading:state=>{state.status='loading';},setComponentsError:(state,action)=>{state.status='failed';state.error=action.payload;}}});export const{setComponents,setActiveComponent,updateComponentStatus,setComponentsLoading,setComponentsError}=componentsSlice.actions;export default componentsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","list","activeComponentId","status","error","componentsSlice","name","reducers","setComponents","state","action","payload","setActiveComponent","updateComponentStatus","componentId","component","find","c","id","setComponentsLoading","setComponentsError","actions","reducer"],"sources":["/Users/cskoons/projects/github/Tekton/Hephaestus/src/src/store/slices/componentsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  list: [],\n  activeComponentId: null,\n  status: 'idle', // 'idle' | 'loading' | 'succeeded' | 'failed'\n  error: null,\n};\n\nconst componentsSlice = createSlice({\n  name: 'components',\n  initialState,\n  reducers: {\n    setComponents: (state, action) => {\n      state.list = action.payload;\n      state.status = 'succeeded';\n    },\n    setActiveComponent: (state, action) => {\n      state.activeComponentId = action.payload;\n    },\n    updateComponentStatus: (state, action) => {\n      const { componentId, status } = action.payload;\n      const component = state.list.find(c => c.id === componentId);\n      if (component) {\n        component.status = status;\n      }\n    },\n    setComponentsLoading: (state) => {\n      state.status = 'loading';\n    },\n    setComponentsError: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  setComponents,\n  setActiveComponent,\n  updateComponentStatus,\n  setComponentsLoading,\n  setComponentsError,\n} = componentsSlice.actions;\n\nexport default componentsSlice.reducer;"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,KAAM,CAAAC,YAAY,CAAG,CACnBC,IAAI,CAAE,EAAE,CACRC,iBAAiB,CAAE,IAAI,CACvBC,MAAM,CAAE,MAAM,CAAE;AAChBC,KAAK,CAAE,IACT,CAAC,CAED,KAAM,CAAAC,eAAe,CAAGN,WAAW,CAAC,CAClCO,IAAI,CAAE,YAAY,CAClBN,YAAY,CACZO,QAAQ,CAAE,CACRC,aAAa,CAAEA,CAACC,KAAK,CAAEC,MAAM,GAAK,CAChCD,KAAK,CAACR,IAAI,CAAGS,MAAM,CAACC,OAAO,CAC3BF,KAAK,CAACN,MAAM,CAAG,WAAW,CAC5B,CAAC,CACDS,kBAAkB,CAAEA,CAACH,KAAK,CAAEC,MAAM,GAAK,CACrCD,KAAK,CAACP,iBAAiB,CAAGQ,MAAM,CAACC,OAAO,CAC1C,CAAC,CACDE,qBAAqB,CAAEA,CAACJ,KAAK,CAAEC,MAAM,GAAK,CACxC,KAAM,CAAEI,WAAW,CAAEX,MAAO,CAAC,CAAGO,MAAM,CAACC,OAAO,CAC9C,KAAM,CAAAI,SAAS,CAAGN,KAAK,CAACR,IAAI,CAACe,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACC,EAAE,GAAKJ,WAAW,CAAC,CAC5D,GAAIC,SAAS,CAAE,CACbA,SAAS,CAACZ,MAAM,CAAGA,MAAM,CAC3B,CACF,CAAC,CACDgB,oBAAoB,CAAGV,KAAK,EAAK,CAC/BA,KAAK,CAACN,MAAM,CAAG,SAAS,CAC1B,CAAC,CACDiB,kBAAkB,CAAEA,CAACX,KAAK,CAAEC,MAAM,GAAK,CACrCD,KAAK,CAACN,MAAM,CAAG,QAAQ,CACvBM,KAAK,CAACL,KAAK,CAAGM,MAAM,CAACC,OAAO,CAC9B,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CACXH,aAAa,CACbI,kBAAkB,CAClBC,qBAAqB,CACrBM,oBAAoB,CACpBC,kBACF,CAAC,CAAGf,eAAe,CAACgB,OAAO,CAE3B,cAAe,CAAAhB,eAAe,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}